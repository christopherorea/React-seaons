{"version":3,"sources":["season.js","load.js","index.js"],"names":["seasonConfig","Summer","text","iconName","Winter","Season","props","lat","month","season","Date","getMonth","className","id","Load","message","defaultProps","App","state","errorMessage","this","renderContent","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","React","Component","ReactDom","render","document","querySelector"],"mappings":"2LAGMA,G,MAAc,CACnBC,OAAQ,CACPC,KAAM,wBACNC,SAAU,eAEXC,OAAQ,CACPF,KAAO,gBACPC,SAAW,wBA6BEE,EAhBA,SAACC,GACf,IAVkBC,EAAIC,EAUhBC,GAVYF,EAUOD,EAAMC,KAVTC,GAUc,IAAIE,MAAOC,YATpC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAGrBA,EAAM,EAAI,SAAW,UAIN,EAECP,EAAaS,GAA9BP,EAFgB,EAEhBA,KAAKC,EAFW,EAEXA,SAEZ,OACC,yBAAKS,UAAS,yBAAoBH,IACjC,uBAAGI,GAAG,YAAYD,UAAS,UACvBT,EADuB,WAE3B,4BACED,GAEF,uBAAGW,GAAG,UAAUD,UAAS,UAAKT,EAAL,aChCtBW,EAAO,SAACR,GACb,OACC,yBAAKM,UAAU,oBACd,yBAAKA,UAAU,sBACbN,EAAMS,WAMXD,EAAKE,aAAe,CACnBD,QAAU,cAGID,QCXTG,E,4MAELC,MAAQ,CAACX,IAAK,KAAMY,aAAc,I,uDAGjC,OACCC,KAAKC,kB,sCAKN,OAAsB,OAAnBD,KAAKF,MAAMX,IAEZ,kBAAC,EAAD,CAAQA,IAAKa,KAAKF,MAAMX,MAIK,KAA5Ba,KAAKF,MAAMC,aAEZ,sCAAYC,KAAKF,MAAMC,cAIxB,kBAAC,EAAD,CAAMJ,QAAQ,sC,0CAII,IAAD,OAClBO,OAAOC,UAAUC,YAAYC,oBAC5B,SAAAC,GACC,EAAKC,SAAS,CAACpB,IAAKmB,EAASE,OAAOC,cAErC,SAAAC,GACC,EAAKH,SAAS,CAACR,aAAcW,EAAIf,iB,GAjCnBgB,IAAMC,WAuCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.cb3be9aa.chunk.js","sourcesContent":["import './season.css';\nimport React from 'react';\n\nconst seasonConfig ={\n\tSummer :{\n\t\ttext: \"Let's go to the beach\",\n\t\ticonName: 'sun massive'\n\t},\n\tWinter :{\n\t\ttext : \"It's chilling\",\n\t\ticonName : 'snowflake massive,'\n\t}\n}\n\nconst getSeason = (lat,month) => {\n\tif(month > 2 && month < 9){\n\t\treturn lat > 0 ? 'Summer' : 'Winter';\n\t}\n\telse{\n\t\treturn lat < 0 ? 'Winter' : 'Summer';\n\t}\n};\n\nconst Season = (props)=>{\n\tconst season = getSeason(props.lat, new Date().getMonth());\n\tconst {text,iconName} = seasonConfig[season];\n\n\treturn(\n\t\t<div className={`season-display ${season}`}>\n\t\t\t<i id=\"izquierda\" className={\n\t\t\t\t`${iconName} icon`} />\n\t\t\t<h1>\n\t\t\t\t{text}\n\t\t\t</h1>\n\t\t\t<i id=\"derecha\" className={`${iconName} icon`} />\n\t\t</div>\n\t);\n};\n\nexport default Season;","import React from 'react';\n\nconst Load = (props)=>{\n\treturn(\n\t\t<div className='ui active dimmer'>\n\t\t\t<div className='ui big text loader'> \n\t\t\t\t{props.message}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nLoad.defaultProps = {\n\tmessage : 'Loading...'\n};\n\nexport default Load;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport Season from './season';\nimport Load from './load';\n\nclass App extends React.Component{\n\n\tstate = {lat: null, errorMessage: ''};\n\n\trender(){\n\t\treturn(\n\t\t\tthis.renderContent()\n\t\t);\n\t}\n\n\trenderContent(){\n\t\tif(this.state.lat !== null){\n\t\t\treturn(\n\t\t\t\t<Season lat={this.state.lat} />\n\t\t\t);\n\t\t}\n\n\t\tif(this.state.errorMessage !== ''){\n\t\t\treturn(\n\t\t\t\t<h1>ERROR: {this.state.errorMessage}</h1>\n\t\t\t)\n\t\t}\n\t\treturn(\n\t\t\t<Load message='Please, accept location request'/>\n\t\t);\n\t}\n\n\tcomponentDidMount(){\n\t\twindow.navigator.geolocation.getCurrentPosition(\n\t\t\tposition => {\n\t\t\t\tthis.setState({lat: position.coords.latitude});\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tthis.setState({errorMessage: err.message});\n\t\t\t}\n\t\t);\n\t}\n}\n\nReactDom.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}